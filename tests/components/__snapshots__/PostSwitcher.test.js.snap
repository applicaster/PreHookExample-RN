// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostSwitcher component renders correctly when facebook is selected 1`] = `
<View
  style={
    Array [
      Object {
        "borderRadius": 5,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 30,
        "marginRight": 11,
        "width": 60,
      },
      Object {
        "borderColor": undefined,
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 0.5,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": undefined,
        },
      ]
    }
    testID={undefined}
  >
    <Image
      source={
        Object {
          "uri": "feed_rn_fb_post_icon",
        }
      }
      style={
        Array [
          Object {
            "height": 18,
            "width": 18,
          },
          Object {
            "tintColor": undefined,
          },
        ]
      }
    />
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 0.5,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "transparent",
        },
      ]
    }
    testID={undefined}
  >
    <Image
      source={
        Object {
          "uri": "feed_rn_twitter_post_icon",
        }
      }
      style={
        Array [
          Object {
            "height": 18,
            "width": 18,
          },
          Object {
            "tintColor": undefined,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`PostSwitcher component renders correctly when twitter is selected 1`] = `
<View
  style={
    Array [
      Object {
        "borderRadius": 5,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 30,
        "marginRight": 11,
        "width": 60,
      },
      Object {
        "borderColor": undefined,
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 0.5,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "transparent",
        },
      ]
    }
    testID={undefined}
  >
    <Image
      source={
        Object {
          "uri": "feed_rn_fb_post_icon",
        }
      }
      style={
        Array [
          Object {
            "height": 18,
            "width": 18,
          },
          Object {
            "tintColor": undefined,
          },
        ]
      }
    />
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 0.5,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": undefined,
        },
      ]
    }
    testID={undefined}
  >
    <Image
      source={
        Object {
          "uri": "feed_rn_twitter_post_icon",
        }
      }
      style={
        Array [
          Object {
            "height": 18,
            "width": 18,
          },
          Object {
            "tintColor": undefined,
          },
        ]
      }
    />
  </View>
</View>
`;
